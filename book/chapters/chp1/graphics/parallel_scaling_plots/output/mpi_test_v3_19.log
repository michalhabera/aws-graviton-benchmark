2023-04-25 08:54:40.405 (   1.578s) [RANK: 0         ]              utils.cpp:616   INFO| Compute partition of cells across ranks
2023-04-25 08:54:40.405 (   1.578s) [RANK: 0         ]         graphbuild.cpp:533   INFO| Building mesh dual graph
2023-04-25 08:54:40.405 (   1.578s) [RANK: 0         ]         graphbuild.cpp:396   INFO| Build local part of mesh dual graph
2023-04-25 08:54:40.719 (   1.893s) [RANK: 0         ]         graphbuild.cpp:89    INFO| Build nonlocal part of mesh dual graph
2023-04-25 08:54:40.723 (   1.896s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 2
2023-04-25 08:54:40.723 (   1.897s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 2
2023-04-25 08:54:40.723 (   1.897s) [RANK: 0         ]         graphbuild.cpp:203   INFO| Number of destination and source ranks in non-local dual graph construction, and ratio to total number of ranks: 2, 2, 0.03125, 0.03125
2023-04-25 08:54:40.770 (   1.943s) [RANK: 0         ]         graphbuild.cpp:545   INFO| Graph edges (local: 1386132, non-local: 49292)
2023-04-25 08:54:40.770 (   1.944s) [RANK: 0         ]       partitioners.cpp:523   INFO| Compute graph partition using ParMETIS
2023-04-25 08:54:41.392 (   2.565s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 10
2023-04-25 08:54:41.392 (   2.565s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 13
2023-04-25 08:54:41.443 (   2.616s) [RANK: 0         ]         graphbuild.cpp:396   INFO| Build local part of mesh dual graph
2023-04-25 08:54:41.692 (   2.866s) [RANK: 0         ]           ordering.cpp:203   INFO| GPS pseudo-diameter:(269) 187451-19325

2023-04-25 08:54:41.742 (   2.916s) [RANK: 0         ]           Topology.cpp:889   INFO| Create topology
2023-04-25 08:54:41.838 (   3.012s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 14
2023-04-25 08:54:41.838 (   3.012s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 10
2023-04-25 08:54:41.920 (   3.093s) [RANK: 0         ]          partition.cpp:233   INFO| Compute ghost indices
2023-04-25 08:54:41.920 (   3.093s) [RANK: 0         ]                MPI.cpp:98    INFO| Computing communication graph edges (using PCX algorithm). Number of input edges: 0
2023-04-25 08:54:41.923 (   3.097s) [RANK: 0         ]                MPI.cpp:155   INFO| Finished graph edge discovery using PCX algorithm. Number of discovered edges 0
2023-04-25 08:54:41.949 (   3.122s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:41.950 (   3.123s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:42.045 (   3.218s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.048 (   3.222s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.049 (   3.222s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.049 (   3.222s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.066 (   3.239s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.066 (   3.240s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.067 (   3.240s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:42.067 (   3.241s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:42.072 (   3.245s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.073 (   3.246s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.107 (   3.281s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:42.108 (   3.281s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:42.108 (   3.281s) [RANK: 0         ]                  MPI.h:375   INFO| Number of neighbourhood source ranks in distribute_to_postoffice: 0
2023-04-25 08:54:42.110 (   3.284s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 13
2023-04-25 08:54:42.111 (   3.284s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 9
2023-04-25 08:54:42.111 (   3.284s) [RANK: 0         ]                  MPI.h:514   INFO| Neighbourhood destination ranks from post office in distribute_data (rank, num dests, num dests/mpi_size): 0, 9, 0.140625
UnitCube (159x154x162) to be refined 1 times
2023-04-25 08:54:42.141 (   3.314s) [RANK: 0         ]topologycomputation.cpp:739   INFO| Computing mesh entities of dimension 1
2023-04-25 08:54:42.241 (   3.414s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.248 (   3.422s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.806 (   3.979s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.847 (   4.020s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.863 (   4.037s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 1
2023-04-25 08:54:42.864 (   4.037s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.864 (   4.038s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:42.877 (   4.051s) [RANK: 0         ]topologycomputation.cpp:739   INFO| Computing mesh entities of dimension 2
2023-04-25 08:54:42.968 (   4.141s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:42.977 (   4.150s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:43.337 (   4.510s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:43.362 (   4.536s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:43.381 (   4.554s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 2 - 1
2023-04-25 08:54:43.732 (   4.906s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 1 - 3
2023-04-25 08:54:43.732 (   4.906s) [RANK: 0         ]topologycomputation.cpp:643   INFO| Computing mesh connectivity 1 - 3 from transpose.
2023-04-25 08:54:43.738 (   4.911s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 2
2023-04-25 08:54:43.852 (   5.026s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 1 - 3
2023-04-25 08:54:43.852 (   5.026s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 1 - 0
2023-04-25 08:54:43.852 (   5.026s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 0
2023-04-25 08:54:44.799 (   5.972s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 1
2023-04-25 08:54:44.799 (   5.972s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 1
2023-04-25 08:54:45.768 (   6.941s) [RANK: 0         ]         graphbuild.cpp:396   INFO| Build local part of mesh dual graph
2023-04-25 08:54:51.003 (  12.176s) [RANK: 0         ]           ordering.cpp:203   INFO| GPS pseudo-diameter:(769) 836863-2989520

2023-04-25 08:54:52.055 (  13.228s) [RANK: 0         ]           Topology.cpp:889   INFO| Create topology
2023-04-25 08:54:52.559 (  13.732s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 20
2023-04-25 08:54:52.559 (  13.732s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 12
2023-04-25 08:54:53.366 (  14.540s) [RANK: 0         ]          partition.cpp:233   INFO| Compute ghost indices
2023-04-25 08:54:53.366 (  14.540s) [RANK: 0         ]                MPI.cpp:98    INFO| Computing communication graph edges (using PCX algorithm). Number of input edges: 0
2023-04-25 08:54:53.452 (  14.626s) [RANK: 0         ]                MPI.cpp:155   INFO| Finished graph edge discovery using PCX algorithm. Number of discovered edges 0
2023-04-25 08:54:53.715 (  14.889s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:53.719 (  14.892s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:54.842 (  16.015s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:54.974 (  16.148s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:54.975 (  16.148s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:54.975 (  16.148s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:55.204 (  16.377s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:55.208 (  16.382s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:55.209 (  16.383s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:55.211 (  16.384s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:55.227 (  16.401s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:55.231 (  16.405s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:55.692 (  16.866s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 1
2023-04-25 08:54:55.695 (  16.869s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:55.695 (  16.869s) [RANK: 0         ]                  MPI.h:375   INFO| Number of neighbourhood source ranks in distribute_to_postoffice: 0
2023-04-25 08:54:55.698 (  16.872s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 19
2023-04-25 08:54:55.704 (  16.877s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:55.704 (  16.877s) [RANK: 0         ]                  MPI.h:514   INFO| Neighbourhood destination ranks from post office in distribute_data (rank, num dests, num dests/mpi_size): 0, 11, 0.171875
2023-04-25 08:54:56.025 (  17.199s) [RANK: 0         ]             refine.cpp:31    INFO| Number of cells increased from 23800392 to 190403136 (700%% increase).
2023-04-25 08:54:56.025 (  17.199s) [RANK: 0         ]topologycomputation.cpp:739   INFO| Computing mesh entities of dimension 2
2023-04-25 08:54:57.278 (  18.451s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:57.414 (  18.588s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:58.913 (  20.086s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:59.020 (  20.193s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:59.302 (  20.475s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 2 - 3
2023-04-25 08:54:59.302 (  20.475s) [RANK: 0         ]topologycomputation.cpp:643   INFO| Computing mesh connectivity 2 - 3 from transpose.
2023-04-25 08:54:59.521 (  20.694s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:59.566 (  20.739s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:59.569 (  20.743s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:59.572 (  20.745s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:59.573 (  20.747s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 0
2023-04-25 08:54:59.576 (  20.749s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 0
2023-04-25 08:54:59.594 (  20.767s) [RANK: 0         ]                MPI.cpp:165   INFO| Computing communication graph edges (using NBX algorithm). Number of input edges: 11
2023-04-25 08:54:59.598 (  20.772s) [RANK: 0         ]                MPI.cpp:236   INFO| Finished graph edge discovery using NBX algorithm. Number of discovered edges 11
2023-04-25 08:54:59.676 (  20.849s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 0
2023-04-25 08:54:59.703 (  20.876s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 0
2023-04-25 08:54:59.703 (  20.876s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 2 - 0
2023-04-25 08:54:59.716 (  20.889s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 2 - 3
2023-04-25 08:55:01.365 (  22.539s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 2 - 3
2023-04-25 08:55:01.366 (  22.539s) [RANK: 0         ]topologycomputation.cpp:780   INFO| Requesting connectivity 3 - 2
2023-04-25 08:55:02.518 (  23.691s) [RANK: 0         ]    SparsityPattern.cpp:389   INFO| Column ghost size increased from 17825 to 57586

----------------------------------------------------------------
Test problem summary
  dolfinx version: 0.6.0.0
  dolfinx hash:    bea5606640992070d624e28b1d6fe712d56217f4
  ufl hash:        db986a93fe3cd8fb732c605125031ae9cf8d3d05
  petsc version:   Petsc Release Version 3.18.1, Oct 26, 2022 
  Problem type:    poisson
  Scaling type:    weak
  Num processes:   64
  Num cells:       190403136 (190 million)
  Total degrees of freedom:               32035575 (32 million)
  Average degrees of freedom per process: 500555
----------------------------------------------------------------
2023-04-25 08:55:05.300 (  26.473s) [RANK: 0         ]              petsc.cpp:675   INFO| PETSc Krylov solver starting to solve system.
KSP Object: 64 MPI processes
  type: cg
  maximum iterations=10000, initial guess is zero
  tolerances:  relative=1e-08, absolute=1e-50, divergence=10000.
  left preconditioning
  using PRECONDITIONED norm type for convergence test
PC Object: 64 MPI processes
  type: hypre
    HYPRE BoomerAMG preconditioning
      Cycle type V
      Maximum number of levels 25
      Maximum number of iterations PER hypre call 1
      Convergence tolerance PER hypre call 0.
      Threshold for strong coupling 0.7
      Interpolation truncation factor 0.
      Interpolation: max elements per row 0
      Number of levels of aggressive coarsening 4
      Number of paths for aggressive coarsening 2
      Maximum row sums 0.9
      Sweeps down         1
      Sweeps up           1
      Sweeps on coarse    1
      Relax down          symmetric-SOR/Jacobi
      Relax up            symmetric-SOR/Jacobi
      Relax on coarse     Gaussian-elimination
      Relax weight  (all)      1.
      Outer relax weight (all) 1.
      Using CF-relaxation
      Not using more complex smoothers.
      Measure type        local
      Coarsen type        Falgout
      Interpolation type  classical
      SpGEMM type         cusparse
  linear system matrix = precond matrix:
  Mat Object: 64 MPI processes
    type: mpiaij
    rows=32035575, cols=32035575
    total: nonzeros=478116067, allocated nonzeros=478116067
    total number of mallocs used during MatSetValues calls=0
      not using I-node (on process 0) routines

[MPI_MAX] Summary of timings                                                |  reps   wall avg   wall tot
---------------------------------------------------------------------------------------------------------
Build BoxMesh                                                               |     1   1.760777   1.760777
Build dofmap data                                                           |     3   0.209147   0.627442
Build sparsity                                                              |     1   0.886544   0.886544
Compute connectivity 1-3                                                    |     1   0.007868   0.007868
Compute connectivity 2-1                                                    |     1   0.351529   0.351529
Compute connectivity 2-3                                                    |     1   0.114944   0.114944
Compute dof reordering map                                                  |     3   0.010662   0.031985
Compute entities of dim = 1                                                 |     1   0.724170   0.724170
Compute entities of dim = 2                                                 |     2   1.905673   3.811347
Compute graph partition (ParMETIS)                                          |     1   0.592527   0.592527
Compute local part of mesh dual graph                                       |     3   1.554371   4.663114
Compute local-to-local map                                                  |     2   0.072672   0.145345
Compute non-local part of mesh dual graph                                   |     1   0.074998   0.074998
Compute-local-to-global links for global/local adjacency list               |     2   0.019461   0.038922
Distribute AdjacencyList nodes to destination ranks                         |     2   0.551623   1.103246
Distribute row-wise data (scalable)                                         |     2   0.019085   0.038171
GPS: create_level_structure                                                 |     8   0.159077   1.869604
Gibbs-Poole-Stockmeyer ordering                                             |     2   1.270319   2.540638
Init MPI                                                                    |     1   1.522587   1.522587
Init PETSc                                                                  |     1   0.035110   0.035110
Init dofmap from element dofmap                                             |     3   0.084012   0.252035
Init logging                                                                |     1   0.000033   0.000033
PETSc Krylov solver                                                         |     1   6.832888   6.832888
PLAZA: refine                                                               |     1   1.617621   1.617621
ParMETIS: call ParMETIS_V3_PartKway                                         |     1   0.584292   0.584292
SparsityPattern::assemble                                                   |     1   0.961610   0.961610
Topology: create                                                            |     2   2.525586   5.051172
Topology: determine shared index ownership                                  |     2   1.078190   2.156379
Topology: determine vertex ownership groups (owned, undetermined, unowned)  |     2   0.163229   0.326458
ZZZ Assemble                                                                |     1   5.516942   5.516942
ZZZ Assemble matrix                                                         |     1   1.988821   1.988821
ZZZ Assemble vector                                                         |     1   0.400952   0.400952
ZZZ Create Mesh                                                             |     1  15.646589  15.646589
ZZZ Create RHS function                                                     |     1   1.685205   1.685205
ZZZ Create boundary conditions                                              |     1   0.077018   0.077018
ZZZ Create facets and facet->cell connectivity                              |     1   3.413029   3.413029
ZZZ FunctionSpace                                                           |     1   0.407961   0.407961
ZZZ Solve                                                                   |     1   6.885610   6.885610
*** Number of Krylov iterations: 16
*** Solution norm:  1204.29
****************************************************************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: ------------------------------------------------------------------

src/dolfinx-scaling-test on a  named c7gn-dy-cg7n-1 with 64 processors, by jhale Tue Apr 25 08:55:12 2023
Using Petsc Release Version 3.18.1, Oct 26, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           3.202e+01     1.000   3.202e+01
Objects:              3.200e+01     1.000   3.200e+01
Flops:                3.744e+08     1.122   3.665e+08  2.346e+10
Flops/sec:            1.169e+07     1.122   1.145e+07  7.326e+08
MPI Msg Count:        3.680e+02     4.000   2.199e+02  1.408e+04
MPI Msg Len (bytes):  1.606e+07     2.360   5.207e+04  7.329e+08
MPI Reductions:       9.400e+01     1.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 3.2016e+01 100.0%  2.3456e+10 100.0%  1.408e+04 100.0%  5.207e+04      100.0%  7.600e+01  80.9%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------
Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

BuildTwoSided          4 1.0 4.4585e-01111.3 0.00e+00 0.0 1.8e+03 4.0e+00 4.0e+00  1  0 13  0  4   1  0 13  0  5     0
BuildTwoSidedF         2 1.0 4.4671e-0134.0 0.00e+00 0.0 1.2e+03 1.8e+05 2.0e+00  1  0  9 31  2   1  0  9 31  3     0
MatMult               16 1.0 2.7821e-01 1.1 2.36e+08 1.1 1.1e+04 4.5e+04 1.0e+00  1 63 78 67  1   1 63 78 67  1 53152
MatConvert             1 1.0 1.3418e-01 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 2.0e+00  0  0  0  0  2   0  0  0  0  3     0
MatAssemblyBegin       3 1.0 5.0451e-01 5.4 0.00e+00 0.0 1.2e+03 1.8e+05 2.0e+00  1  0  9 31  2   1  0  9 31  3     0
MatAssemblyEnd         3 1.0 1.6835e-01 1.4 1.86e+05 2.4 0.0e+00 0.0e+00 6.0e+00  0  0  0  0  6   0  0  0  0  8    50
MatGetRowIJ            2 1.0 6.1210e-0612.9 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatView                1 1.0 2.9919e-04 3.4 0.00e+00 0.0 0.0e+00 0.0e+00 1.0e+00  0  0  0  0  1   0  0  0  0  1     0
VecTDot               32 1.0 5.3698e-02 2.4 3.29e+07 1.1 0.0e+00 0.0e+00 3.2e+01  0  9  0  0 34   0  9  0  0 42 38182
VecNorm               17 1.0 1.5617e-0143.7 1.75e+07 1.1 0.0e+00 0.0e+00 1.7e+01  0  5  0  0 18   0  5  0  0 22  6975
VecCopy                2 1.0 2.2108e-03 1.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet                18 1.0 7.0915e-03 4.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY               32 1.0 5.4164e-02 1.2 3.29e+07 1.1 0.0e+00 0.0e+00 0.0e+00  0  9  0  0  0   0  9  0  0  0 37853
VecAYPX               15 1.0 2.2333e-02 1.2 1.54e+07 1.1 0.0e+00 0.0e+00 0.0e+00  0  4  0  0  0   0  4  0  0  0 43034
VecScatterBegin       17 1.0 1.5794e-02 2.4 0.00e+00 0.0 1.3e+04 4.0e+04 2.0e+00  0  0 91 69  2   0  0 91 69  3     0
VecScatterEnd         17 1.0 3.6727e-0212.8 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetGraph             3 1.0 1.2949e-03 2.5 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetUp                2 1.0 4.6926e-03 2.6 0.00e+00 0.0 2.4e+03 8.1e+03 2.0e+00  0  0 17  3  2   0  0 17  3  3     0
SFPack                17 1.0 9.3118e-03 2.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFUnpack              17 1.0 5.4710e-05 2.5 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 1.7327e-03 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve               1 1.0 3.9166e+00 1.0 3.34e+08 1.1 1.1e+04 4.5e+04 5.0e+01 12 89 78 67 53  12 89 78 67 66  5346
PCSetUp                1 1.0 2.9120e+00 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 2.0e+00  9  0  0  0  2   9  0  0  0  3     0
PCApply               17 1.0 3.5394e+00 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00 11  0  0  0  0  11  0  0  0  0     0

--- Event Stage 1: Unknown

------------------------------------------------------------------------------------------------------------------------

Object Type          Creations   Destructions. Reports information only for process 0.

--- Event Stage 0: Main Stage

              Matrix     4              4
           Index Set     6              6
   IS L to G Mapping     3              3
              Vector    12             12
   Star Forest Graph     3              3
       Krylov Solver     1              1
      Preconditioner     1              1
              Viewer     2              1

--- Event Stage 1: Unknown

========================================================================================================================
Average time to get PetscTime(): 3.29e-08
Average time for MPI_Barrier(): 3.5487e-05
Average time for zero size MPI_Send(): 2.7082e-06
#PETSc Option Table entries:
--ndofs 500000
--problem_type poisson
--scaling_type weak
-ksp_rtol 1.0e-8
-ksp_type cg
-ksp_view
-log_view
-pc_hypre_boomeramg_agg_nl 4
-pc_hypre_boomeramg_agg_num_paths 2
-pc_hypre_boomeramg_strong_threshold 0.7
-pc_hypre_type boomeramg
-pc_type hypre
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --prefix=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/petsc-3.18.1-txitgxfv637he6tuei4n6qiij35vijrn --with-ssl=0 --download-c2html=0 --download-sowing=0 --download-hwloc=0 --with-cc=/opt/amazon/openmpi/bin/mpicc --with-cxx=/opt/amazon/openmpi/bin/mpic++ --with-fc=/opt/amazon/openmpi/bin/mpif90 --with-precision=double --with-scalar-type=real --with-shared-libraries=1 --with-debugging=0 --with-openmp=0 --with-64-bit-indices=0 --with-blaslapack-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/openblas-0.3.21-tbvr4bn67qxndsshpds7gx3soqe2hq62/lib/libopenblas.so --with-x=0 --with-clanguage=C --with-cuda=0 --with-hip=0 --with-metis=1 --with-metis-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/metis-5.1.0-lpw3g5apiz2ng7cjvnjempxjee4unfuh/include --with-metis-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/metis-5.1.0-lpw3g5apiz2ng7cjvnjempxjee4unfuh/lib/libmetis.so --with-hypre=1 --with-hypre-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hypre-2.26.0-3rzb4fzt3fg73d7pck6qzpvnfl3pyyvx/include --with-hypre-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hypre-2.26.0-3rzb4fzt3fg73d7pck6qzpvnfl3pyyvx/lib/libHYPRE.so --with-parmetis=1 --with-parmetis-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/parmetis-4.0.3-vbagcxtgunhly3er2wos63cmxu6a5nn5/include --with-parmetis-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/parmetis-4.0.3-vbagcxtgunhly3er2wos63cmxu6a5nn5/lib/libparmetis.so --with-kokkos=0 --with-kokkos-kernels=0 --with-superlu_dist=1 --with-superlu_dist-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/superlu-dist-8.1.1-3rbympm25gjfmph6bazo5fhuknezdxl2/include --with-superlu_dist-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/superlu-dist-8.1.1-3rbympm25gjfmph6bazo5fhuknezdxl2/lib/libsuperlu_dist.so --with-ptscotch=0 --with-suitesparse=0 --with-hdf5=1 --with-hdf5-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hdf5-1.12.2-ivbwbhp3nomujldcqkr3n7ttazzhdrxk/include --with-hdf5-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hdf5-1.12.2-ivbwbhp3nomujldcqkr3n7ttazzhdrxk/lib/libhdf5.so --with-zlib=1 --with-zlib-include=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/zlib-1.2.13-wgainxox25zb7vq754jlb47f52majg26/include --with-zlib-lib=/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/zlib-1.2.13-wgainxox25zb7vq754jlb47f52majg26/lib/libz.so --with-mumps=0 --with-trilinos=0 --with-fftw=0 --with-valgrind=0 --with-gmp=0 --with-libpng=0 --with-giflib=0 --with-mpfr=0 --with-netcdf=0 --with-pnetcdf=0 --with-moab=0 --with-random123=0 --with-exodusii=0 --with-cgns=0 --with-memkind=0 --with-p4est=0 --with-saws=0 --with-yaml=0 --with-hwloc=0 --with-libjpeg=0 --with-scalapack=0 --with-strumpack=0 --with-mmg=0 --with-parmmg=0 --with-tetgen=0
-----------------------------------------
Libraries compiled on 2023-01-19 13:16:23 on small-dy-small-1 
Machine characteristics: Linux-5.10.126-117.518.amzn2.aarch64-aarch64-with-glibc2.26
Using PETSc directory: /home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/petsc-3.18.1-txitgxfv637he6tuei4n6qiij35vijrn
Using PETSc arch: 
-----------------------------------------

Using C compiler: /opt/amazon/openmpi/bin/mpicc  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O   
Using Fortran compiler: /opt/amazon/openmpi/bin/mpif90  -fPIC -Wall -ffree-line-length-none -ffree-line-length-0 -Wno-lto-type-mismatch -Wno-unused-dummy-argument -g -O     
-----------------------------------------

Using include paths: -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/petsc-3.18.1-txitgxfv637he6tuei4n6qiij35vijrn/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hypre-2.26.0-3rzb4fzt3fg73d7pck6qzpvnfl3pyyvx/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/superlu-dist-8.1.1-3rbympm25gjfmph6bazo5fhuknezdxl2/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hdf5-1.12.2-ivbwbhp3nomujldcqkr3n7ttazzhdrxk/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/parmetis-4.0.3-vbagcxtgunhly3er2wos63cmxu6a5nn5/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/metis-5.1.0-lpw3g5apiz2ng7cjvnjempxjee4unfuh/include -I/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/zlib-1.2.13-wgainxox25zb7vq754jlb47f52majg26/include
-----------------------------------------

Using C linker: /opt/amazon/openmpi/bin/mpicc
Using Fortran linker: /opt/amazon/openmpi/bin/mpif90
Using libraries: -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/petsc-3.18.1-txitgxfv637he6tuei4n6qiij35vijrn/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/petsc-3.18.1-txitgxfv637he6tuei4n6qiij35vijrn/lib -lpetsc -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hypre-2.26.0-3rzb4fzt3fg73d7pck6qzpvnfl3pyyvx/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hypre-2.26.0-3rzb4fzt3fg73d7pck6qzpvnfl3pyyvx/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/superlu-dist-8.1.1-3rbympm25gjfmph6bazo5fhuknezdxl2/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/superlu-dist-8.1.1-3rbympm25gjfmph6bazo5fhuknezdxl2/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/openblas-0.3.21-tbvr4bn67qxndsshpds7gx3soqe2hq62/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/openblas-0.3.21-tbvr4bn67qxndsshpds7gx3soqe2hq62/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hdf5-1.12.2-ivbwbhp3nomujldcqkr3n7ttazzhdrxk/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/hdf5-1.12.2-ivbwbhp3nomujldcqkr3n7ttazzhdrxk/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/parmetis-4.0.3-vbagcxtgunhly3er2wos63cmxu6a5nn5/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/parmetis-4.0.3-vbagcxtgunhly3er2wos63cmxu6a5nn5/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/metis-5.1.0-lpw3g5apiz2ng7cjvnjempxjee4unfuh/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/metis-5.1.0-lpw3g5apiz2ng7cjvnjempxjee4unfuh/lib -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/zlib-1.2.13-wgainxox25zb7vq754jlb47f52majg26/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-12.2.0/zlib-1.2.13-wgainxox25zb7vq754jlb47f52majg26/lib -Wl,-rpath,/opt/amazon/openmpi/lib64 -L/opt/amazon/openmpi/lib64 -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib64 -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib/gcc/aarch64-unknown-linux-gnu/12.2.0 -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib/gcc/aarch64-unknown-linux-gnu/12.2.0 -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib64 -Wl,-rpath,/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib -L/home/jhale/spack/opt/spack/linux-amzn2-neoverse_v1/gcc-7.3.1/gcc-12.2.0-huc2sescmw646r26mnp2vgu54rybd4kr/lib -lHYPRE -lsuperlu_dist -lopenblas -lhdf5 -lparmetis -lmetis -lm -lz -lstdc++ -ldl -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lpthread -lstdc++ -ldl
-----------------------------------------

2023-04-25 08:55:13.607 (  34.781s) [RANK: 0         ]             loguru.cpp:526   INFO| atexit
